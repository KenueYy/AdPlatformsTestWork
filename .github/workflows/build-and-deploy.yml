name: Build and Deploy Service

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '--build service') }}
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image from code
        run: |
          pwd 
          ls -R
          docker build -f Dockerfile -t ad-platforms-testwork:latest .

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ production.DOCKER_USERNAME }}
          password: ${{ production.DOCKER_PASSWORD }}

      - name: Push Docker image to DockerHub
        run: |
          docker tag ad-platforms-testwork:latest kenuey/ad-platforms-testwork:latest
          docker push kenuey/ad-platforms-testwork:latest
  
  deploy:
    runs-on: ubuntu-latest
    environment: secrets
    needs: build
  
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v2
        
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ production.DOCKER_USERNAME }}
          password: ${{ production.DOCKER_PASSWORD }}

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ production.SERVER_IP }}
          username: ${{ production.SERVER_USER }}
          key: ${{ production.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/AdPlatformsTestWork/"
          
      - name: Deploy to server with debug
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ production.SERVER_IP }}
          username: ${{ production.SERVER_USER }}
          key: ${{ production.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ production.DOCKER_PASSWORD }} | sudo docker login --username ${{ production.DOCKER_USERNAME }} --password-stdin
            cd /home/AdPlatformsTestWork
            docker-compose down
            docker-compose up -d --build
            
          debug: true
